{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "9575802522129586761"
    }
  },
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "azuremaps",
      "maxLength": 11,
      "minLength": 1,
      "metadata": {
        "description": "Azure Maps real time position tracking demo project."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location to use for all deployments."
      }
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "Current UTC time"
      }
    }
  },
  "variables": {
    "skuName": "B1",
    "skuUnits": 1,
    "d2cPartitions": 4,
    "iotHubName": "[format('{0}Hub{1}', parameters('projectName'), uniqueString(resourceGroup().id))]",
    "storageAccountName": "[format('{0}{1}', toLower(parameters('projectName')), uniqueString(resourceGroup().id))]",
    "storageEndpoint1": "iotclogs",
    "routeName1": "[format('{0}-route', variables('storageEndpoint1'))]",
    "storageContainerName1": "iotclogs",
    "storageContainerName2": "public",
    "wpsName": "[format('{0}{1}', toLower(parameters('projectName')), uniqueString(resourceGroup().id))]",
    "UnitCount": 1,
    "Sku": "Free_F1",
    "PricingTier": "Free",
    "appName": "[format('{0}{1}', toLower(parameters('projectName')), uniqueString(resourceGroup().id))]",
    "runtime": "node",
    "functionAppName": "[variables('appName')]",
    "hostingPlanName": "[variables('appName')]",
    "applicationInsightsName": "[variables('appName')]",
    "functionWorkerRuntime": "[variables('runtime')]",
    "deviceName": "myPhone",
    "identityName": "[format('{0}scriptidentity', parameters('projectName'))]",
    "rgRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
    "rgRoleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), variables('rgRoleDefinitionId'), resourceGroup().id)]",
    "storageRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
    "storageRoleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), variables('storageRoleDefinitionId'), resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedHeaders": [
                ""
              ],
              "allowedMethods": [
                "GET"
              ],
              "allowedOrigins": [
                "*"
              ],
              "exposedHeaders": [
                ""
              ],
              "maxAgeInSeconds": 0
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName1'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName2'))]",
      "properties": {
        "publicAccess": "Blob"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2021-07-02",
      "name": "[variables('iotHubName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('skuName')]",
        "capacity": "[variables('skuUnits')]"
      },
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": "[variables('d2cPartitions')]"
          }
        },
        "routing": {
          "endpoints": {
            "storageContainers": [
              {
                "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]",
                "containerName": "[variables('storageContainerName1')]",
                "fileNameFormat": "{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}",
                "batchFrequencyInSeconds": 100,
                "maxChunkSizeInBytes": 104857600,
                "encoding": "JSON",
                "name": "[variables('storageEndpoint1')]"
              }
            ]
          },
          "routes": [
            {
              "name": "[variables('routeName1')]",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": [
                "[variables('storageEndpoint1')]"
              ],
              "isEnabled": true
            },
            {
              "name": "fallback-route",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": [
                "events"
              ],
              "isEnabled": true
            }
          ]
        },
        "messagingEndpoints": {
          "fileNotifications": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "enableFileUploadNotifications": false,
        "cloudToDevice": {
          "maxDeliveryCount": 10,
          "defaultTtlAsIso8601": "PT1H",
          "feedback": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName1')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName1')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName1')), '/')[2])]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName2')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName2')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName2')), '/')[2])]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.SignalRService/webPubSub",
      "apiVersion": "2021-10-01",
      "name": "[variables('wpsName')]",
      "location": "[parameters('location')]",
      "sku": {
        "capacity": "[variables('UnitCount')]",
        "name": "[variables('Sku')]",
        "tier": "[variables('PricingTier')]"
      },
      "identity": {
        "type": "None"
      },
      "properties": {
        "disableAadAuth": false,
        "disableLocalAuth": false,
        "liveTraceConfiguration": {
          "categories": [
            {
              "enabled": "false",
              "name": "ConnectivityLogs"
            },
            {
              "enabled": "false",
              "name": "MessagingLogs"
            }
          ],
          "enabled": "false"
        },
        "networkACLs": {
          "defaultAction": "Deny",
          "publicNetwork": {
            "allow": [
              "ServerConnection",
              "ClientConnection",
              "RESTAPI",
              "Trace"
            ]
          }
        },
        "publicNetworkAccess": "Enabled",
        "resourceLogConfiguration": {
          "categories": [
            {
              "enabled": "true",
              "name": "ConnectivityLogs"
            },
            {
              "enabled": "true",
              "name": "MessagingLogs"
            }
          ]
        },
        "tls": {
          "clientCertEnabled": false
        }
      }
    },
    {
      "type": "Microsoft.Maps/accounts",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}{1}', toLower(parameters('projectName')), uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "G2"
      },
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": [
                "*"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~16"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "EventHubConnectionString",
              "value": "[format('Endpoint={0}/;SharedAccessKeyName=iothubowner;SharedAccessKey={1};EntityPath={2}', reference(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2021-07-02').eventHubEndpoints.events.endpoint, listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2021-07-02').value[0].primaryKey, reference(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2021-07-02').eventHubEndpoints.events.path)]"
            }
          ],
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2",
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com"
            ],
            "supportCredentials": true
          },
          "webSocketsEnabled": true
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "PostDeploymentscript",
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
        }
      },
      "properties": {
        "forceUpdateTag": "[parameters('utcValue')]",
        "azCliVersion": "2.15.0",
        "arguments": "[format('{0} {1} {2} {3} {4} {5} {6} {7} {8} {9}', variables('functionAppName'), resourceGroup().name, variables('storageAccountName'), variables('storageContainerName2'), format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value), reference(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2021-07-02').eventHubEndpoints.events.path, listkeys(resourceId('Microsoft.Maps/accounts', format('{0}{1}', toLower(parameters('projectName')), uniqueString(resourceGroup().id))), '2021-12-01-preview').primaryKey, environment().suffixes.storage, variables('iotHubName'), variables('deviceName'))]",
        "primaryScriptUri": "https://raw.githubusercontent.com/Azure-Samples/azuremaps-indoor-realtime-position-tracking/main/deploy/postdeploy.sh",
        "supportingScriptUris": [],
        "timeout": "PT30M",
        "cleanupPreference": "OnExpiration",
        "retentionInterval": "P1D"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.Maps/accounts', format('{0}{1}', toLower(parameters('projectName')), uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]",
        "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('rgRoleDefinitionName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.SignalRService/webPubSub', variables('wpsName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('identityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('rgRoleDefinitionName')]",
      "properties": {
        "roleDefinitionId": "[variables('rgRoleDefinitionId')]",
        "principalId": "[reference(variables('identityName')).principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('storageRoleDefinitionName')]",
      "properties": {
        "roleDefinitionId": "[variables('storageRoleDefinitionId')]",
        "principalId": "[reference(variables('identityName')).principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
      ]
    }
  ],
  "outputs": {
    "webAppURL": {
      "type": "string",
      "value": "[format('https://{0}.azurewebsites.net/api/index?clientId=blobs_extension', variables('functionAppName'))]"
    },
    "deviceConnectionString": {
      "type": "string",
      "value": "[format('HostName={0}.azure-devices.net;DeviceId={1};SharedAccessKey={2}', variables('iotHubName'), variables('deviceName'), listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2021-07-02').value[0].primaryKey)]"
    }
  }
}